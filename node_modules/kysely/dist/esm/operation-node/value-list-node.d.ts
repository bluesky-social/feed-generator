import { AggregateFunctionNode } from './aggregate-function-node.js';
import { DefaultInsertValueNode } from './default-insert-value-node.js';
import { OperationNode } from './operation-node.js';
import { RawNode } from './raw-node.js';
import { ReferenceNode } from './reference-node.js';
import { SelectQueryNode } from './select-query-node.js';
import { ValueNode } from './value-node.js';
export declare type ListNodeItem = ValueNode | ReferenceNode | DefaultInsertValueNode | SelectQueryNode | RawNode | AggregateFunctionNode;
export interface ValueListNode extends OperationNode {
    readonly kind: 'ValueListNode';
    readonly values: ReadonlyArray<ListNodeItem>;
}
/**
 * @internal
 */
export declare const ValueListNode: Readonly<{
    is(node: OperationNode): node is ValueListNode;
    create(values: ReadonlyArray<ListNodeItem>): ValueListNode;
}>;
