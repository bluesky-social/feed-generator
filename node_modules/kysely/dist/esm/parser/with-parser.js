/// <reference types="./with-parser.d.ts" />
import { CommonTableExpressionNode } from '../operation-node/common-table-expression-node.js';
import { CommonTableExpressionNameNode } from '../operation-node/common-table-expression-name-node.js';
import { createQueryCreator } from './parse-utils.js';
export function parseCommonTableExpression(name, expression) {
    const builder = expression(createQueryCreator());
    return CommonTableExpressionNode.create(parseCommonTableExpressionName(name), builder.toOperationNode());
}
function parseCommonTableExpressionName(name) {
    if (name.includes('(')) {
        const parts = name.split(/[\(\)]/);
        const table = parts[0];
        const columns = parts[1].split(',').map((it) => it.trim());
        return CommonTableExpressionNameNode.create(table, columns);
    }
    else {
        return CommonTableExpressionNameNode.create(name);
    }
}
