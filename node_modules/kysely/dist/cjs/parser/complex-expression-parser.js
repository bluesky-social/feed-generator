"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isComplexExpression = exports.parseAliasedComplexExpression = exports.parseComplexExpression = void 0;
const operation_node_source_js_1 = require("../operation-node/operation-node-source.js");
const object_utils_js_1 = require("../util/object-utils.js");
const parse_utils_js_1 = require("./parse-utils.js");
function parseComplexExpression(exp) {
    if ((0, operation_node_source_js_1.isOperationNodeSource)(exp)) {
        return exp.toOperationNode();
    }
    else if ((0, object_utils_js_1.isFunction)(exp)) {
        return exp((0, parse_utils_js_1.createExpressionBuilder)()).toOperationNode();
    }
    throw new Error(`invalid expression: ${JSON.stringify(exp)}`);
}
exports.parseComplexExpression = parseComplexExpression;
function parseAliasedComplexExpression(exp) {
    if ((0, operation_node_source_js_1.isOperationNodeSource)(exp)) {
        return exp.toOperationNode();
    }
    else if ((0, object_utils_js_1.isFunction)(exp)) {
        return exp((0, parse_utils_js_1.createExpressionBuilder)()).toOperationNode();
    }
    throw new Error(`invalid aliased expression: ${JSON.stringify(exp)}`);
}
exports.parseAliasedComplexExpression = parseAliasedComplexExpression;
function isComplexExpression(obj) {
    return (0, operation_node_source_js_1.isOperationNodeSource)(obj) || (0, object_utils_js_1.isFunction)(obj);
}
exports.isComplexExpression = isComplexExpression;
