import express from 'express';
import { Lexicons, LexXrpcProcedure, LexXrpcQuery, LexXrpcSubscription } from '@atproto/lexicon';
import { UndecodedParams, Params, HandlerInput, HandlerSuccess, Options } from './types';
export declare function decodeQueryParams(def: LexXrpcProcedure | LexXrpcQuery | LexXrpcSubscription, params: UndecodedParams): Params;
export declare function decodeQueryParam(type: string, value: unknown): string | number | boolean | undefined;
export declare function getQueryParams(url?: string): Record<string, string | string[]>;
export declare function validateInput(nsid: string, def: LexXrpcProcedure | LexXrpcQuery, req: express.Request, opts: Options, lexicons: Lexicons): HandlerInput | undefined;
export declare function validateOutput(nsid: string, def: LexXrpcProcedure | LexXrpcQuery, output: HandlerSuccess | undefined, lexicons: Lexicons): HandlerSuccess | undefined;
export declare function normalizeMime(v: string): any;
export declare function hasBody(req: express.Request): string | true | undefined;
export declare function processBodyAsBytes(req: express.Request): Promise<Uint8Array>;
