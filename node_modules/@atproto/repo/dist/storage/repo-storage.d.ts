import { CID } from 'multiformats/cid';
import BlockMap from '../block-map';
import { CommitBlockData, CommitData } from '../types';
import ReadableBlockstore from './readable-blockstore';
export declare abstract class RepoStorage extends ReadableBlockstore {
    abstract getHead(forUpdate?: boolean): Promise<CID | null>;
    abstract getCommitPath(latest: CID, earliest: CID | null): Promise<CID[] | null>;
    abstract getBlocksForCommits(commits: CID[]): Promise<{
        [commit: string]: BlockMap;
    }>;
    abstract putBlock(cid: CID, block: Uint8Array): Promise<void>;
    abstract putMany(blocks: BlockMap): Promise<void>;
    abstract updateHead(cid: CID, prev: CID | null): Promise<void>;
    abstract indexCommits(commit: CommitData[]): Promise<void>;
    applyCommit(commit: CommitData): Promise<void>;
    getCommits(latest: CID, earliest: CID | null): Promise<CommitBlockData[] | null>;
}
export default RepoStorage;
