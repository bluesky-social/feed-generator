import { z } from 'zod';
export declare const lexBoolean: z.ZodObject<{
    type: z.ZodLiteral<"boolean">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodBoolean>;
    const: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    default?: boolean | undefined;
    const?: boolean | undefined;
    type: "boolean";
}, {
    description?: string | undefined;
    default?: boolean | undefined;
    const?: boolean | undefined;
    type: "boolean";
}>;
export declare type LexBoolean = z.infer<typeof lexBoolean>;
export declare const lexFloat: z.ZodObject<{
    type: z.ZodLiteral<"float">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodNumber>;
    minimum: z.ZodOptional<z.ZodNumber>;
    maximum: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    const: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "float";
}, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "float";
}>;
export declare type LexFloat = z.infer<typeof lexFloat>;
export declare const lexInteger: z.ZodObject<{
    type: z.ZodLiteral<"integer">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodNumber>;
    minimum: z.ZodOptional<z.ZodNumber>;
    maximum: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    const: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "integer";
}, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "integer";
}>;
export declare type LexInteger = z.infer<typeof lexInteger>;
export declare const lexStringFormat: z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>;
export declare type LexStringFormat = z.infer<typeof lexStringFormat>;
export declare const lexString: z.ZodObject<{
    type: z.ZodLiteral<"string">;
    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodString>;
    minLength: z.ZodOptional<z.ZodNumber>;
    maxLength: z.ZodOptional<z.ZodNumber>;
    minGraphemes: z.ZodOptional<z.ZodNumber>;
    maxGraphemes: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    const: z.ZodOptional<z.ZodString>;
    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    default?: string | undefined;
    const?: string | undefined;
    enum?: string[] | undefined;
    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    minGraphemes?: number | undefined;
    maxGraphemes?: number | undefined;
    knownValues?: string[] | undefined;
    type: "string";
}, {
    description?: string | undefined;
    default?: string | undefined;
    const?: string | undefined;
    enum?: string[] | undefined;
    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    minGraphemes?: number | undefined;
    maxGraphemes?: number | undefined;
    knownValues?: string[] | undefined;
    type: "string";
}>;
export declare type LexString = z.infer<typeof lexString>;
export declare const lexUnknown: z.ZodObject<{
    type: z.ZodLiteral<"unknown">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "unknown";
}, {
    description?: string | undefined;
    type: "unknown";
}>;
export declare type LexUnknown = z.infer<typeof lexUnknown>;
export declare const lexPrimitive: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"boolean">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodBoolean>;
    const: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    default?: boolean | undefined;
    const?: boolean | undefined;
    type: "boolean";
}, {
    description?: string | undefined;
    default?: boolean | undefined;
    const?: boolean | undefined;
    type: "boolean";
}>, z.ZodObject<{
    type: z.ZodLiteral<"float">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodNumber>;
    minimum: z.ZodOptional<z.ZodNumber>;
    maximum: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    const: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "float";
}, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "float";
}>, z.ZodObject<{
    type: z.ZodLiteral<"integer">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodNumber>;
    minimum: z.ZodOptional<z.ZodNumber>;
    maximum: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    const: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "integer";
}, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "integer";
}>, z.ZodObject<{
    type: z.ZodLiteral<"string">;
    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodString>;
    minLength: z.ZodOptional<z.ZodNumber>;
    maxLength: z.ZodOptional<z.ZodNumber>;
    minGraphemes: z.ZodOptional<z.ZodNumber>;
    maxGraphemes: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    const: z.ZodOptional<z.ZodString>;
    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    default?: string | undefined;
    const?: string | undefined;
    enum?: string[] | undefined;
    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    minGraphemes?: number | undefined;
    maxGraphemes?: number | undefined;
    knownValues?: string[] | undefined;
    type: "string";
}, {
    description?: string | undefined;
    default?: string | undefined;
    const?: string | undefined;
    enum?: string[] | undefined;
    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    minGraphemes?: number | undefined;
    maxGraphemes?: number | undefined;
    knownValues?: string[] | undefined;
    type: "string";
}>, z.ZodObject<{
    type: z.ZodLiteral<"unknown">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "unknown";
}, {
    description?: string | undefined;
    type: "unknown";
}>]>;
export declare type LexPrimitive = z.infer<typeof lexPrimitive>;
export declare const lexBytes: z.ZodObject<{
    type: z.ZodLiteral<"bytes">;
    description: z.ZodOptional<z.ZodString>;
    maxLength: z.ZodOptional<z.ZodNumber>;
    minLength: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "bytes";
}, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "bytes";
}>;
export declare type LexBytes = z.infer<typeof lexBytes>;
export declare const lexCidLink: z.ZodObject<{
    type: z.ZodLiteral<"cid-link">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "cid-link";
}, {
    description?: string | undefined;
    type: "cid-link";
}>;
export declare type LexCidLink = z.infer<typeof lexCidLink>;
export declare const lexIpldType: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"bytes">;
    description: z.ZodOptional<z.ZodString>;
    maxLength: z.ZodOptional<z.ZodNumber>;
    minLength: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "bytes";
}, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "bytes";
}>, z.ZodObject<{
    type: z.ZodLiteral<"cid-link">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "cid-link";
}, {
    description?: string | undefined;
    type: "cid-link";
}>]>;
export declare type LexIpldType = z.infer<typeof lexIpldType>;
export declare const lexRef: z.ZodObject<{
    type: z.ZodLiteral<"ref">;
    description: z.ZodOptional<z.ZodString>;
    ref: z.ZodString;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "ref";
    ref: string;
}, {
    description?: string | undefined;
    type: "ref";
    ref: string;
}>;
export declare type LexRef = z.infer<typeof lexRef>;
export declare const lexRefUnion: z.ZodObject<{
    type: z.ZodLiteral<"union">;
    description: z.ZodOptional<z.ZodString>;
    refs: z.ZodArray<z.ZodString, "many">;
    closed: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    closed?: boolean | undefined;
    type: "union";
    refs: string[];
}, {
    description?: string | undefined;
    closed?: boolean | undefined;
    type: "union";
    refs: string[];
}>;
export declare type LexRefUnion = z.infer<typeof lexRefUnion>;
export declare const lexRefVariant: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"ref">;
    description: z.ZodOptional<z.ZodString>;
    ref: z.ZodString;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "ref";
    ref: string;
}, {
    description?: string | undefined;
    type: "ref";
    ref: string;
}>, z.ZodObject<{
    type: z.ZodLiteral<"union">;
    description: z.ZodOptional<z.ZodString>;
    refs: z.ZodArray<z.ZodString, "many">;
    closed: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    closed?: boolean | undefined;
    type: "union";
    refs: string[];
}, {
    description?: string | undefined;
    closed?: boolean | undefined;
    type: "union";
    refs: string[];
}>]>;
export declare type LexRefVariant = z.infer<typeof lexRefVariant>;
export declare const lexBlob: z.ZodObject<{
    type: z.ZodLiteral<"blob">;
    description: z.ZodOptional<z.ZodString>;
    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    maxSize: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    accept?: string[] | undefined;
    maxSize?: number | undefined;
    type: "blob";
}, {
    description?: string | undefined;
    accept?: string[] | undefined;
    maxSize?: number | undefined;
    type: "blob";
}>;
export declare type LexBlob = z.infer<typeof lexBlob>;
export declare const lexArray: z.ZodObject<{
    type: z.ZodLiteral<"array">;
    description: z.ZodOptional<z.ZodString>;
    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"bytes">;
        description: z.ZodOptional<z.ZodString>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"cid-link">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "cid-link";
    }, {
        description?: string | undefined;
        type: "cid-link";
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"blob">;
        description: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>]>;
    minLength: z.ZodOptional<z.ZodNumber>;
    maxLength: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "array";
    items: {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    };
}, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "array";
    items: {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    };
}>;
export declare type LexArray = z.infer<typeof lexArray>;
export declare const lexPrimitiveArray: z.ZodObject<z.extendShape<{
    type: z.ZodLiteral<"array">;
    description: z.ZodOptional<z.ZodString>;
    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"bytes">;
        description: z.ZodOptional<z.ZodString>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"cid-link">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "cid-link";
    }, {
        description?: string | undefined;
        type: "cid-link";
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"blob">;
        description: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>]>;
    minLength: z.ZodOptional<z.ZodNumber>;
    maxLength: z.ZodOptional<z.ZodNumber>;
}, {
    items: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>;
}>, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "array";
    items: {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    };
}, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "array";
    items: {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    };
}>;
export declare type LexPrimitiveArray = z.infer<typeof lexPrimitiveArray>;
export declare const lexToken: z.ZodObject<{
    type: z.ZodLiteral<"token">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "token";
}, {
    description?: string | undefined;
    type: "token";
}>;
export declare type LexToken = z.infer<typeof lexToken>;
export declare const lexObject: z.ZodObject<{
    type: z.ZodLiteral<"object">;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"bytes">;
        description: z.ZodOptional<z.ZodString>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"cid-link">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "cid-link";
    }, {
        description?: string | undefined;
        type: "cid-link";
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"array">;
        description: z.ZodOptional<z.ZodString>;
        items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>]>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"blob">;
        description: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>]>>>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    required?: string[] | undefined;
    nullable?: string[] | undefined;
    properties?: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }> | undefined;
    type: "object";
}, {
    description?: string | undefined;
    required?: string[] | undefined;
    nullable?: string[] | undefined;
    properties?: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }> | undefined;
    type: "object";
}>;
export declare type LexObject = z.infer<typeof lexObject>;
export declare const lexXrpcParameters: z.ZodObject<{
    type: z.ZodLiteral<"params">;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>, z.ZodObject<z.extendShape<{
        type: z.ZodLiteral<"array">;
        description: z.ZodOptional<z.ZodString>;
        items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>]>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
    }, {
        items: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>;
    }>, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        };
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        };
    }>]>>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    required?: string[] | undefined;
    type: "params";
    properties: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        };
    }>;
}, {
    description?: string | undefined;
    required?: string[] | undefined;
    type: "params";
    properties: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        };
    }>;
}>;
export declare type LexXrpcParameters = z.infer<typeof lexXrpcParameters>;
export declare const lexXrpcBody: z.ZodObject<{
    description: z.ZodOptional<z.ZodString>;
    encoding: z.ZodString;
    schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"object">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>]>>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }>]>>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    schema?: {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | undefined;
    encoding: string;
}, {
    description?: string | undefined;
    schema?: {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | undefined;
    encoding: string;
}>;
export declare type LexXrpcBody = z.infer<typeof lexXrpcBody>;
export declare const lexXrpcSubscriptionMessage: z.ZodObject<{
    description: z.ZodOptional<z.ZodString>;
    schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"object">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>]>>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }>]>>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    schema?: {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | undefined;
}, {
    description?: string | undefined;
    schema?: {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | undefined;
}>;
export declare type LexXrpcSubscriptionMessage = z.infer<typeof lexXrpcSubscriptionMessage>;
export declare const lexXrpcError: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    name: string;
}, {
    description?: string | undefined;
    name: string;
}>;
export declare type LexXrpcError = z.infer<typeof lexXrpcError>;
export declare const lexXrpcQuery: z.ZodObject<{
    type: z.ZodLiteral<"query">;
    description: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodObject<{
        type: z.ZodLiteral<"params">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodObject<z.extendShape<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, {
            items: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>;
        }>, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }>>;
    output: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        encoding: z.ZodString;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }>>;
    errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "query";
}, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "query";
}>;
export declare type LexXrpcQuery = z.infer<typeof lexXrpcQuery>;
export declare const lexXrpcProcedure: z.ZodObject<{
    type: z.ZodLiteral<"procedure">;
    description: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodObject<{
        type: z.ZodLiteral<"params">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodObject<z.extendShape<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, {
            items: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>;
        }>, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }>>;
    input: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        encoding: z.ZodString;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }>>;
    output: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        encoding: z.ZodString;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }>>;
    errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    input?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    type: "procedure";
}, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    input?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    type: "procedure";
}>;
export declare type LexXrpcProcedure = z.infer<typeof lexXrpcProcedure>;
export declare const lexXrpcSubscription: z.ZodObject<{
    type: z.ZodLiteral<"subscription">;
    description: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodObject<{
        type: z.ZodLiteral<"params">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodObject<z.extendShape<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, {
            items: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>;
        }>, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }>>;
    message: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    }>>;
    infos: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
    errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    message?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    } | undefined;
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    infos?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "subscription";
}, {
    message?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    } | undefined;
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    infos?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "subscription";
}>;
export declare type LexXrpcSubscription = z.infer<typeof lexXrpcSubscription>;
export declare const lexRecord: z.ZodObject<{
    type: z.ZodLiteral<"record">;
    description: z.ZodOptional<z.ZodString>;
    key: z.ZodOptional<z.ZodString>;
    record: z.ZodObject<{
        type: z.ZodLiteral<"object">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>]>>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    key?: string | undefined;
    type: "record";
    record: {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    };
}, {
    description?: string | undefined;
    key?: string | undefined;
    type: "record";
    record: {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    };
}>;
export declare type LexRecord = z.infer<typeof lexRecord>;
export declare const lexUserType: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"record">;
    description: z.ZodOptional<z.ZodString>;
    key: z.ZodOptional<z.ZodString>;
    record: z.ZodObject<{
        type: z.ZodLiteral<"object">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>]>>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    key?: string | undefined;
    type: "record";
    record: {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    };
}, {
    description?: string | undefined;
    key?: string | undefined;
    type: "record";
    record: {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    };
}>, z.ZodObject<{
    type: z.ZodLiteral<"query">;
    description: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodObject<{
        type: z.ZodLiteral<"params">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodObject<z.extendShape<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, {
            items: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>;
        }>, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }>>;
    output: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        encoding: z.ZodString;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }>>;
    errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "query";
}, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "query";
}>, z.ZodObject<{
    type: z.ZodLiteral<"procedure">;
    description: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodObject<{
        type: z.ZodLiteral<"params">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodObject<z.extendShape<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, {
            items: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>;
        }>, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }>>;
    input: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        encoding: z.ZodString;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }>>;
    output: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        encoding: z.ZodString;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    }>>;
    errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    input?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    type: "procedure";
}, {
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    output?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    input?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
        encoding: string;
    } | undefined;
    type: "procedure";
}>, z.ZodObject<{
    type: z.ZodLiteral<"subscription">;
    description: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodObject<{
        type: z.ZodLiteral<"params">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodObject<z.extendShape<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, {
            items: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>;
        }>, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    }>>;
    message: z.ZodOptional<z.ZodObject<{
        description: z.ZodOptional<z.ZodString>;
        schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>]>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    }, {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    }>>;
    infos: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
    errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        name: string;
    }, {
        description?: string | undefined;
        name: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    message?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    } | undefined;
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    infos?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "subscription";
}, {
    message?: {
        description?: string | undefined;
        schema?: {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        } | undefined;
    } | undefined;
    description?: string | undefined;
    parameters?: {
        description?: string | undefined;
        required?: string[] | undefined;
        type: "params";
        properties: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            };
        }>;
    } | undefined;
    errors?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    infos?: {
        description?: string | undefined;
        name: string;
    }[] | undefined;
    type: "subscription";
}>, z.ZodObject<{
    type: z.ZodLiteral<"blob">;
    description: z.ZodOptional<z.ZodString>;
    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    maxSize: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    accept?: string[] | undefined;
    maxSize?: number | undefined;
    type: "blob";
}, {
    description?: string | undefined;
    accept?: string[] | undefined;
    maxSize?: number | undefined;
    type: "blob";
}>, z.ZodObject<{
    type: z.ZodLiteral<"array">;
    description: z.ZodOptional<z.ZodString>;
    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"bytes">;
        description: z.ZodOptional<z.ZodString>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"cid-link">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "cid-link";
    }, {
        description?: string | undefined;
        type: "cid-link";
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"blob">;
        description: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>]>;
    minLength: z.ZodOptional<z.ZodNumber>;
    maxLength: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "array";
    items: {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    };
}, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "array";
    items: {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    };
}>, z.ZodObject<{
    type: z.ZodLiteral<"token">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "token";
}, {
    description?: string | undefined;
    type: "token";
}>, z.ZodObject<{
    type: z.ZodLiteral<"object">;
    description: z.ZodOptional<z.ZodString>;
    required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"ref">;
        description: z.ZodOptional<z.ZodString>;
        ref: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }, {
        description?: string | undefined;
        type: "ref";
        ref: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"union">;
        description: z.ZodOptional<z.ZodString>;
        refs: z.ZodArray<z.ZodString, "many">;
        closed: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }, {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    }>]>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"bytes">;
        description: z.ZodOptional<z.ZodString>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"cid-link">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "cid-link";
    }, {
        description?: string | undefined;
        type: "cid-link";
    }>]>, z.ZodObject<{
        type: z.ZodLiteral<"array">;
        description: z.ZodOptional<z.ZodString>;
        items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>]>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"blob">;
        description: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }>, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>]>>>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    required?: string[] | undefined;
    nullable?: string[] | undefined;
    properties?: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }> | undefined;
    type: "object";
}, {
    description?: string | undefined;
    required?: string[] | undefined;
    nullable?: string[] | undefined;
    properties?: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        type: "ref";
        ref: string;
    } | {
        description?: string | undefined;
        closed?: boolean | undefined;
        type: "union";
        refs: string[];
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }> | undefined;
    type: "object";
}>, z.ZodObject<{
    type: z.ZodLiteral<"boolean">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodBoolean>;
    const: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    default?: boolean | undefined;
    const?: boolean | undefined;
    type: "boolean";
}, {
    description?: string | undefined;
    default?: boolean | undefined;
    const?: boolean | undefined;
    type: "boolean";
}>, z.ZodObject<{
    type: z.ZodLiteral<"float">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodNumber>;
    minimum: z.ZodOptional<z.ZodNumber>;
    maximum: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    const: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "float";
}, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "float";
}>, z.ZodObject<{
    type: z.ZodLiteral<"integer">;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodNumber>;
    minimum: z.ZodOptional<z.ZodNumber>;
    maximum: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    const: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "integer";
}, {
    minimum?: number | undefined;
    maximum?: number | undefined;
    description?: string | undefined;
    default?: number | undefined;
    const?: number | undefined;
    enum?: number[] | undefined;
    type: "integer";
}>, z.ZodObject<{
    type: z.ZodLiteral<"string">;
    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
    description: z.ZodOptional<z.ZodString>;
    default: z.ZodOptional<z.ZodString>;
    minLength: z.ZodOptional<z.ZodNumber>;
    maxLength: z.ZodOptional<z.ZodNumber>;
    minGraphemes: z.ZodOptional<z.ZodNumber>;
    maxGraphemes: z.ZodOptional<z.ZodNumber>;
    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    const: z.ZodOptional<z.ZodString>;
    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    default?: string | undefined;
    const?: string | undefined;
    enum?: string[] | undefined;
    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    minGraphemes?: number | undefined;
    maxGraphemes?: number | undefined;
    knownValues?: string[] | undefined;
    type: "string";
}, {
    description?: string | undefined;
    default?: string | undefined;
    const?: string | undefined;
    enum?: string[] | undefined;
    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    minGraphemes?: number | undefined;
    maxGraphemes?: number | undefined;
    knownValues?: string[] | undefined;
    type: "string";
}>, z.ZodObject<{
    type: z.ZodLiteral<"bytes">;
    description: z.ZodOptional<z.ZodString>;
    maxLength: z.ZodOptional<z.ZodNumber>;
    minLength: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "bytes";
}, {
    description?: string | undefined;
    minLength?: number | undefined;
    maxLength?: number | undefined;
    type: "bytes";
}>, z.ZodObject<{
    type: z.ZodLiteral<"cid-link">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "cid-link";
}, {
    description?: string | undefined;
    type: "cid-link";
}>, z.ZodObject<{
    type: z.ZodLiteral<"unknown">;
    description: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    type: "unknown";
}, {
    description?: string | undefined;
    type: "unknown";
}>]>;
export declare type LexUserType = z.infer<typeof lexUserType>;
export declare const lexiconDoc: z.ZodEffects<z.ZodObject<{
    lexicon: z.ZodLiteral<1>;
    id: z.ZodEffects<z.ZodString, string, string>;
    revision: z.ZodOptional<z.ZodNumber>;
    description: z.ZodOptional<z.ZodString>;
    defs: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"record">;
        description: z.ZodOptional<z.ZodString>;
        key: z.ZodOptional<z.ZodString>;
        record: z.ZodObject<{
            type: z.ZodLiteral<"object">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>]>>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        }>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        key?: string | undefined;
        type: "record";
        record: {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        };
    }, {
        description?: string | undefined;
        key?: string | undefined;
        type: "record";
        record: {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"query">;
        description: z.ZodOptional<z.ZodString>;
        parameters: z.ZodOptional<z.ZodObject<{
            type: z.ZodLiteral<"params">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodObject<z.extendShape<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, {
                items: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>;
            }>, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        }>>;
        output: z.ZodOptional<z.ZodObject<{
            description: z.ZodOptional<z.ZodString>;
            encoding: z.ZodString;
            schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"object">;
                description: z.ZodOptional<z.ZodString>;
                required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"array">;
                    description: z.ZodOptional<z.ZodString>;
                    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"boolean">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodBoolean>;
                        const: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"float">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"integer">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"string">;
                        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodString>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minGraphemes: z.ZodOptional<z.ZodNumber>;
                        maxGraphemes: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        const: z.ZodOptional<z.ZodString>;
                        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unknown">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "unknown";
                    }, {
                        description?: string | undefined;
                        type: "unknown";
                    }>]>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"bytes">;
                        description: z.ZodOptional<z.ZodString>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"cid-link">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "cid-link";
                    }, {
                        description?: string | undefined;
                        type: "cid-link";
                    }>]>, z.ZodObject<{
                        type: z.ZodLiteral<"blob">;
                        description: z.ZodOptional<z.ZodString>;
                        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        maxSize: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"ref">;
                        description: z.ZodOptional<z.ZodString>;
                        ref: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"union">;
                        description: z.ZodOptional<z.ZodString>;
                        refs: z.ZodArray<z.ZodString, "many">;
                        closed: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }>]>]>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>]>>>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        }, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        }>>;
        errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            name: string;
        }, {
            description?: string | undefined;
            name: string;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "query";
    }, {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "query";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"procedure">;
        description: z.ZodOptional<z.ZodString>;
        parameters: z.ZodOptional<z.ZodObject<{
            type: z.ZodLiteral<"params">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodObject<z.extendShape<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, {
                items: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>;
            }>, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        }>>;
        input: z.ZodOptional<z.ZodObject<{
            description: z.ZodOptional<z.ZodString>;
            encoding: z.ZodString;
            schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"object">;
                description: z.ZodOptional<z.ZodString>;
                required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"array">;
                    description: z.ZodOptional<z.ZodString>;
                    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"boolean">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodBoolean>;
                        const: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"float">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"integer">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"string">;
                        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodString>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minGraphemes: z.ZodOptional<z.ZodNumber>;
                        maxGraphemes: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        const: z.ZodOptional<z.ZodString>;
                        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unknown">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "unknown";
                    }, {
                        description?: string | undefined;
                        type: "unknown";
                    }>]>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"bytes">;
                        description: z.ZodOptional<z.ZodString>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"cid-link">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "cid-link";
                    }, {
                        description?: string | undefined;
                        type: "cid-link";
                    }>]>, z.ZodObject<{
                        type: z.ZodLiteral<"blob">;
                        description: z.ZodOptional<z.ZodString>;
                        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        maxSize: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"ref">;
                        description: z.ZodOptional<z.ZodString>;
                        ref: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"union">;
                        description: z.ZodOptional<z.ZodString>;
                        refs: z.ZodArray<z.ZodString, "many">;
                        closed: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }>]>]>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>]>>>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        }, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        }>>;
        output: z.ZodOptional<z.ZodObject<{
            description: z.ZodOptional<z.ZodString>;
            encoding: z.ZodString;
            schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"object">;
                description: z.ZodOptional<z.ZodString>;
                required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"array">;
                    description: z.ZodOptional<z.ZodString>;
                    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"boolean">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodBoolean>;
                        const: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"float">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"integer">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"string">;
                        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodString>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minGraphemes: z.ZodOptional<z.ZodNumber>;
                        maxGraphemes: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        const: z.ZodOptional<z.ZodString>;
                        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unknown">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "unknown";
                    }, {
                        description?: string | undefined;
                        type: "unknown";
                    }>]>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"bytes">;
                        description: z.ZodOptional<z.ZodString>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"cid-link">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "cid-link";
                    }, {
                        description?: string | undefined;
                        type: "cid-link";
                    }>]>, z.ZodObject<{
                        type: z.ZodLiteral<"blob">;
                        description: z.ZodOptional<z.ZodString>;
                        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        maxSize: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"ref">;
                        description: z.ZodOptional<z.ZodString>;
                        ref: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"union">;
                        description: z.ZodOptional<z.ZodString>;
                        refs: z.ZodArray<z.ZodString, "many">;
                        closed: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }>]>]>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>]>>>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        }, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        }>>;
        errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            name: string;
        }, {
            description?: string | undefined;
            name: string;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        input?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        type: "procedure";
    }, {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        input?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        type: "procedure";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"subscription">;
        description: z.ZodOptional<z.ZodString>;
        parameters: z.ZodOptional<z.ZodObject<{
            type: z.ZodLiteral<"params">;
            description: z.ZodOptional<z.ZodString>;
            required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            properties: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodObject<z.extendShape<{
                type: z.ZodLiteral<"array">;
                description: z.ZodOptional<z.ZodString>;
                items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>]>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
            }, {
                items: z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>;
            }>, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        }, {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        }>>;
        message: z.ZodOptional<z.ZodObject<{
            description: z.ZodOptional<z.ZodString>;
            schema: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"object">;
                description: z.ZodOptional<z.ZodString>;
                required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"ref">;
                    description: z.ZodOptional<z.ZodString>;
                    ref: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }, {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"union">;
                    description: z.ZodOptional<z.ZodString>;
                    refs: z.ZodArray<z.ZodString, "many">;
                    closed: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }, {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                }>]>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"bytes">;
                    description: z.ZodOptional<z.ZodString>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"cid-link">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "cid-link";
                }, {
                    description?: string | undefined;
                    type: "cid-link";
                }>]>, z.ZodObject<{
                    type: z.ZodLiteral<"array">;
                    description: z.ZodOptional<z.ZodString>;
                    items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"boolean">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodBoolean>;
                        const: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }, {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"float">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"integer">;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodNumber>;
                        minimum: z.ZodOptional<z.ZodNumber>;
                        maximum: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                        const: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }, {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"string">;
                        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                        description: z.ZodOptional<z.ZodString>;
                        default: z.ZodOptional<z.ZodString>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minGraphemes: z.ZodOptional<z.ZodNumber>;
                        maxGraphemes: z.ZodOptional<z.ZodNumber>;
                        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        const: z.ZodOptional<z.ZodString>;
                        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }, {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"unknown">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "unknown";
                    }, {
                        description?: string | undefined;
                        type: "unknown";
                    }>]>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"bytes">;
                        description: z.ZodOptional<z.ZodString>;
                        maxLength: z.ZodOptional<z.ZodNumber>;
                        minLength: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }, {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"cid-link">;
                        description: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "cid-link";
                    }, {
                        description?: string | undefined;
                        type: "cid-link";
                    }>]>, z.ZodObject<{
                        type: z.ZodLiteral<"blob">;
                        description: z.ZodOptional<z.ZodString>;
                        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        maxSize: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }, {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    }>, z.ZodUnion<[z.ZodObject<{
                        type: z.ZodLiteral<"ref">;
                        description: z.ZodOptional<z.ZodString>;
                        ref: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }, {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    }>, z.ZodObject<{
                        type: z.ZodLiteral<"union">;
                        description: z.ZodOptional<z.ZodString>;
                        refs: z.ZodArray<z.ZodString, "many">;
                        closed: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }, {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    }>]>]>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }, {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"blob">;
                    description: z.ZodOptional<z.ZodString>;
                    accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }, {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                }>, z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"boolean">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodBoolean>;
                    const: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"float">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"integer">;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodNumber>;
                    minimum: z.ZodOptional<z.ZodNumber>;
                    maximum: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                    const: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }, {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"string">;
                    format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                    description: z.ZodOptional<z.ZodString>;
                    default: z.ZodOptional<z.ZodString>;
                    minLength: z.ZodOptional<z.ZodNumber>;
                    maxLength: z.ZodOptional<z.ZodNumber>;
                    minGraphemes: z.ZodOptional<z.ZodNumber>;
                    maxGraphemes: z.ZodOptional<z.ZodNumber>;
                    enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    const: z.ZodOptional<z.ZodString>;
                    knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }, {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"unknown">;
                    description: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    description?: string | undefined;
                    type: "unknown";
                }, {
                    description?: string | undefined;
                    type: "unknown";
                }>]>]>>>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }, {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            }>]>>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        }, {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        }>>;
        infos: z.ZodOptional<z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            name: string;
        }, {
            description?: string | undefined;
            name: string;
        }>, "many">>;
        errors: z.ZodOptional<z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            name: string;
        }, {
            description?: string | undefined;
            name: string;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        message?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        } | undefined;
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        infos?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "subscription";
    }, {
        message?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        } | undefined;
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        infos?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "subscription";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"blob">;
        description: z.ZodOptional<z.ZodString>;
        accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }, {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"array">;
        description: z.ZodOptional<z.ZodString>;
        items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>]>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"token">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "token";
    }, {
        description?: string | undefined;
        type: "token";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"object">;
        description: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        nullable: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"ref">;
            description: z.ZodOptional<z.ZodString>;
            ref: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }, {
            description?: string | undefined;
            type: "ref";
            ref: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"union">;
            description: z.ZodOptional<z.ZodString>;
            refs: z.ZodArray<z.ZodString, "many">;
            closed: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }, {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        }>]>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"bytes">;
            description: z.ZodOptional<z.ZodString>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"cid-link">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "cid-link";
        }, {
            description?: string | undefined;
            type: "cid-link";
        }>]>, z.ZodObject<{
            type: z.ZodLiteral<"array">;
            description: z.ZodOptional<z.ZodString>;
            items: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"boolean">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodBoolean>;
                const: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"float">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"integer">;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodNumber>;
                minimum: z.ZodOptional<z.ZodNumber>;
                maximum: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
                const: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }, {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"string">;
                format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
                description: z.ZodOptional<z.ZodString>;
                default: z.ZodOptional<z.ZodString>;
                minLength: z.ZodOptional<z.ZodNumber>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minGraphemes: z.ZodOptional<z.ZodNumber>;
                maxGraphemes: z.ZodOptional<z.ZodNumber>;
                enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                const: z.ZodOptional<z.ZodString>;
                knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }, {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unknown">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "unknown";
            }, {
                description?: string | undefined;
                type: "unknown";
            }>]>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"bytes">;
                description: z.ZodOptional<z.ZodString>;
                maxLength: z.ZodOptional<z.ZodNumber>;
                minLength: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }, {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            }>, z.ZodObject<{
                type: z.ZodLiteral<"cid-link">;
                description: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "cid-link";
            }, {
                description?: string | undefined;
                type: "cid-link";
            }>]>, z.ZodObject<{
                type: z.ZodLiteral<"blob">;
                description: z.ZodOptional<z.ZodString>;
                accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }, {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            }>, z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"ref">;
                description: z.ZodOptional<z.ZodString>;
                ref: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }, {
                description?: string | undefined;
                type: "ref";
                ref: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"union">;
                description: z.ZodOptional<z.ZodString>;
                refs: z.ZodArray<z.ZodString, "many">;
                closed: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }, {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            }>]>]>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }, {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"blob">;
            description: z.ZodOptional<z.ZodString>;
            accept: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }, {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        }>, z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"boolean">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"float">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"integer">;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodNumber>;
            minimum: z.ZodOptional<z.ZodNumber>;
            maximum: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
            const: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }, {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"string">;
            format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
            description: z.ZodOptional<z.ZodString>;
            default: z.ZodOptional<z.ZodString>;
            minLength: z.ZodOptional<z.ZodNumber>;
            maxLength: z.ZodOptional<z.ZodNumber>;
            minGraphemes: z.ZodOptional<z.ZodNumber>;
            maxGraphemes: z.ZodOptional<z.ZodNumber>;
            enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            const: z.ZodOptional<z.ZodString>;
            knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }, {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unknown">;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            description?: string | undefined;
            type: "unknown";
        }, {
            description?: string | undefined;
            type: "unknown";
        }>]>]>>>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }, {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"boolean">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"float">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"integer">;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodNumber>;
        minimum: z.ZodOptional<z.ZodNumber>;
        maximum: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
        const: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }, {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"string">;
        format: z.ZodOptional<z.ZodEnum<["datetime", "uri", "at-uri", "did", "handle", "at-identifier", "nsid", "cid"]>>;
        description: z.ZodOptional<z.ZodString>;
        default: z.ZodOptional<z.ZodString>;
        minLength: z.ZodOptional<z.ZodNumber>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minGraphemes: z.ZodOptional<z.ZodNumber>;
        maxGraphemes: z.ZodOptional<z.ZodNumber>;
        enum: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        const: z.ZodOptional<z.ZodString>;
        knownValues: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }, {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"bytes">;
        description: z.ZodOptional<z.ZodString>;
        maxLength: z.ZodOptional<z.ZodNumber>;
        minLength: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }, {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"cid-link">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "cid-link";
    }, {
        description?: string | undefined;
        type: "cid-link";
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unknown">;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        description?: string | undefined;
        type: "unknown";
    }, {
        description?: string | undefined;
        type: "unknown";
    }>]>>;
}, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    revision?: number | undefined;
    lexicon: 1;
    id: string;
    defs: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    } | {
        description?: string | undefined;
        type: "token";
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "query";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        input?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        type: "procedure";
    } | {
        message?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        } | undefined;
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        infos?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "subscription";
    } | {
        description?: string | undefined;
        key?: string | undefined;
        type: "record";
        record: {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        };
    }>;
}, {
    description?: string | undefined;
    revision?: number | undefined;
    lexicon: 1;
    id: string;
    defs: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    } | {
        description?: string | undefined;
        type: "token";
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "query";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        input?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        type: "procedure";
    } | {
        message?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        } | undefined;
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        infos?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "subscription";
    } | {
        description?: string | undefined;
        key?: string | undefined;
        type: "record";
        record: {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        };
    }>;
}>, {
    description?: string | undefined;
    revision?: number | undefined;
    lexicon: 1;
    id: string;
    defs: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    } | {
        description?: string | undefined;
        type: "token";
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "query";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        input?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        type: "procedure";
    } | {
        message?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        } | undefined;
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        infos?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "subscription";
    } | {
        description?: string | undefined;
        key?: string | undefined;
        type: "record";
        record: {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        };
    }>;
}, {
    description?: string | undefined;
    revision?: number | undefined;
    lexicon: 1;
    id: string;
    defs: Record<string, {
        description?: string | undefined;
        default?: boolean | undefined;
        const?: boolean | undefined;
        type: "boolean";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "float";
    } | {
        minimum?: number | undefined;
        maximum?: number | undefined;
        description?: string | undefined;
        default?: number | undefined;
        const?: number | undefined;
        enum?: number[] | undefined;
        type: "integer";
    } | {
        description?: string | undefined;
        default?: string | undefined;
        const?: string | undefined;
        enum?: string[] | undefined;
        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        minGraphemes?: number | undefined;
        maxGraphemes?: number | undefined;
        knownValues?: string[] | undefined;
        type: "string";
    } | {
        description?: string | undefined;
        type: "unknown";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "bytes";
    } | {
        description?: string | undefined;
        type: "cid-link";
    } | {
        description?: string | undefined;
        accept?: string[] | undefined;
        maxSize?: number | undefined;
        type: "blob";
    } | {
        description?: string | undefined;
        minLength?: number | undefined;
        maxLength?: number | undefined;
        type: "array";
        items: {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        };
    } | {
        description?: string | undefined;
        type: "token";
    } | {
        description?: string | undefined;
        required?: string[] | undefined;
        nullable?: string[] | undefined;
        properties?: Record<string, {
            description?: string | undefined;
            default?: boolean | undefined;
            const?: boolean | undefined;
            type: "boolean";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "float";
        } | {
            minimum?: number | undefined;
            maximum?: number | undefined;
            description?: string | undefined;
            default?: number | undefined;
            const?: number | undefined;
            enum?: number[] | undefined;
            type: "integer";
        } | {
            description?: string | undefined;
            default?: string | undefined;
            const?: string | undefined;
            enum?: string[] | undefined;
            format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            minGraphemes?: number | undefined;
            maxGraphemes?: number | undefined;
            knownValues?: string[] | undefined;
            type: "string";
        } | {
            description?: string | undefined;
            type: "unknown";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "bytes";
        } | {
            description?: string | undefined;
            type: "cid-link";
        } | {
            description?: string | undefined;
            type: "ref";
            ref: string;
        } | {
            description?: string | undefined;
            closed?: boolean | undefined;
            type: "union";
            refs: string[];
        } | {
            description?: string | undefined;
            accept?: string[] | undefined;
            maxSize?: number | undefined;
            type: "blob";
        } | {
            description?: string | undefined;
            minLength?: number | undefined;
            maxLength?: number | undefined;
            type: "array";
            items: {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            };
        }> | undefined;
        type: "object";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "query";
    } | {
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        output?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        input?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
            encoding: string;
        } | undefined;
        type: "procedure";
    } | {
        message?: {
            description?: string | undefined;
            schema?: {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                required?: string[] | undefined;
                nullable?: string[] | undefined;
                properties?: Record<string, {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "array";
                    items: {
                        description?: string | undefined;
                        default?: boolean | undefined;
                        const?: boolean | undefined;
                        type: "boolean";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "float";
                    } | {
                        minimum?: number | undefined;
                        maximum?: number | undefined;
                        description?: string | undefined;
                        default?: number | undefined;
                        const?: number | undefined;
                        enum?: number[] | undefined;
                        type: "integer";
                    } | {
                        description?: string | undefined;
                        default?: string | undefined;
                        const?: string | undefined;
                        enum?: string[] | undefined;
                        format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        minGraphemes?: number | undefined;
                        maxGraphemes?: number | undefined;
                        knownValues?: string[] | undefined;
                        type: "string";
                    } | {
                        description?: string | undefined;
                        type: "unknown";
                    } | {
                        description?: string | undefined;
                        minLength?: number | undefined;
                        maxLength?: number | undefined;
                        type: "bytes";
                    } | {
                        description?: string | undefined;
                        type: "cid-link";
                    } | {
                        description?: string | undefined;
                        type: "ref";
                        ref: string;
                    } | {
                        description?: string | undefined;
                        closed?: boolean | undefined;
                        type: "union";
                        refs: string[];
                    } | {
                        description?: string | undefined;
                        accept?: string[] | undefined;
                        maxSize?: number | undefined;
                        type: "blob";
                    };
                }> | undefined;
                type: "object";
            } | undefined;
        } | undefined;
        description?: string | undefined;
        parameters?: {
            description?: string | undefined;
            required?: string[] | undefined;
            type: "params";
            properties: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                };
            }>;
        } | undefined;
        errors?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        infos?: {
            description?: string | undefined;
            name: string;
        }[] | undefined;
        type: "subscription";
    } | {
        description?: string | undefined;
        key?: string | undefined;
        type: "record";
        record: {
            description?: string | undefined;
            required?: string[] | undefined;
            nullable?: string[] | undefined;
            properties?: Record<string, {
                description?: string | undefined;
                default?: boolean | undefined;
                const?: boolean | undefined;
                type: "boolean";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "float";
            } | {
                minimum?: number | undefined;
                maximum?: number | undefined;
                description?: string | undefined;
                default?: number | undefined;
                const?: number | undefined;
                enum?: number[] | undefined;
                type: "integer";
            } | {
                description?: string | undefined;
                default?: string | undefined;
                const?: string | undefined;
                enum?: string[] | undefined;
                format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                minGraphemes?: number | undefined;
                maxGraphemes?: number | undefined;
                knownValues?: string[] | undefined;
                type: "string";
            } | {
                description?: string | undefined;
                type: "unknown";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "bytes";
            } | {
                description?: string | undefined;
                type: "cid-link";
            } | {
                description?: string | undefined;
                type: "ref";
                ref: string;
            } | {
                description?: string | undefined;
                closed?: boolean | undefined;
                type: "union";
                refs: string[];
            } | {
                description?: string | undefined;
                accept?: string[] | undefined;
                maxSize?: number | undefined;
                type: "blob";
            } | {
                description?: string | undefined;
                minLength?: number | undefined;
                maxLength?: number | undefined;
                type: "array";
                items: {
                    description?: string | undefined;
                    default?: boolean | undefined;
                    const?: boolean | undefined;
                    type: "boolean";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "float";
                } | {
                    minimum?: number | undefined;
                    maximum?: number | undefined;
                    description?: string | undefined;
                    default?: number | undefined;
                    const?: number | undefined;
                    enum?: number[] | undefined;
                    type: "integer";
                } | {
                    description?: string | undefined;
                    default?: string | undefined;
                    const?: string | undefined;
                    enum?: string[] | undefined;
                    format?: "cid" | "datetime" | "uri" | "at-uri" | "did" | "handle" | "at-identifier" | "nsid" | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    minGraphemes?: number | undefined;
                    maxGraphemes?: number | undefined;
                    knownValues?: string[] | undefined;
                    type: "string";
                } | {
                    description?: string | undefined;
                    type: "unknown";
                } | {
                    description?: string | undefined;
                    minLength?: number | undefined;
                    maxLength?: number | undefined;
                    type: "bytes";
                } | {
                    description?: string | undefined;
                    type: "cid-link";
                } | {
                    description?: string | undefined;
                    type: "ref";
                    ref: string;
                } | {
                    description?: string | undefined;
                    closed?: boolean | undefined;
                    type: "union";
                    refs: string[];
                } | {
                    description?: string | undefined;
                    accept?: string[] | undefined;
                    maxSize?: number | undefined;
                    type: "blob";
                };
            }> | undefined;
            type: "object";
        };
    }>;
}>;
export declare type LexiconDoc = z.infer<typeof lexiconDoc>;
export declare function isValidLexiconDoc(v: unknown): v is LexiconDoc;
export declare function isObj(obj: unknown): obj is Record<string, unknown>;
export declare function hasProp<K extends PropertyKey>(data: object, prop: K): data is Record<K, unknown>;
export declare const discriminatedObject: z.ZodObject<{
    $type: z.ZodString;
}, "strip", z.ZodTypeAny, {
    $type: string;
}, {
    $type: string;
}>;
export declare type DiscriminatedObject = z.infer<typeof discriminatedObject>;
export declare function isDiscriminatedObject(value: unknown): value is DiscriminatedObject;
export declare class LexiconDocMalformedError extends Error {
    schemaDef: unknown;
    issues?: z.ZodIssue[] | undefined;
    constructor(message: string, schemaDef: unknown, issues?: z.ZodIssue[] | undefined);
}
export declare type ValidationResult = {
    success: true;
    value: unknown;
} | {
    success: false;
    error: ValidationError;
};
export declare class ValidationError extends Error {
}
export declare class InvalidLexiconError extends Error {
}
export declare class LexiconDefNotFoundError extends Error {
}
