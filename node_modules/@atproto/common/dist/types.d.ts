import * as mf from 'multiformats/cid';
import { z } from 'zod';
import { Def } from './check';
export declare const schema: {
    cid: z.ZodEffects<z.ZodEffects<z.ZodAny, any, any>, mf.CID, any>;
    bytes: z.ZodType<Uint8Array, z.ZodTypeDef, Uint8Array>;
    string: z.ZodString;
    array: z.ZodArray<z.ZodUnknown, "many">;
    record: z.ZodRecord<z.ZodString, z.ZodUnknown>;
    unknown: z.ZodUnknown;
};
export declare const def: {
    cid: Def<mf.CID>;
    bytes: Def<Uint8Array>;
    string: Def<string>;
    record: Def<Record<string, unknown>>;
    unknown: Def<unknown>;
};
export declare type ArrayEl<A> = A extends readonly (infer T)[] ? T : never;
