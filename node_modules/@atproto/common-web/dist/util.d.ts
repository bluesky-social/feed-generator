/// <reference types="node" />
export declare const noUndefinedVals: <T>(obj: Record<string, T>) => Record<string, T>;
export declare const wait: (ms: number) => Promise<unknown>;
export declare const bailableWait: (ms: number) => {
    bail: () => void;
    wait: () => Promise<void>;
};
export declare const flattenUint8Arrays: (arrs: Uint8Array[]) => Uint8Array;
export declare const streamToArray: (stream: AsyncIterable<Uint8Array>) => Promise<Uint8Array>;
export declare const s32encode: (i: number) => string;
export declare const s32decode: (s: string) => number;
export declare const asyncFilter: <T>(arr: T[], fn: (t: T) => Promise<boolean>) => Promise<T[]>;
export declare const isErrnoException: (err: unknown) => err is NodeJS.ErrnoException;
export declare const errHasMsg: (err: unknown, msg: string) => boolean;
export declare const chunkArray: <T>(arr: T[], chunkSize: number) => T[][];
export declare const range: (num: number) => number[];
